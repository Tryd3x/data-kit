1. Customers Without Rentals (Easy)
Problem:
Find customers who have not made a rental in the past year. Include their customer_id and name.

Constraints:

Use the following schema:

customer:
customer_id, first_name, last_name.
rental:
rental_id, customer_id, rental_date.
Combine first_name and last_name as name.

Exclude customers who have made any rental in the past year.

Sort by customer_id.

Output:

customer_id	name
145	John Doe
302	Alice Johnson

======================================================================================================================================
======================================================================================================================================

2. Most Popular Rental Times (Easy)
Problem:
Find the 3 most common rental times of the day. Include the hour and total_rentals.

Constraints:

Use the following schema:

rental:
rental_id, rental_date.
Extract the hour from rental_date.

Group by hour and count the number of rentals.

Sort by total_rentals in descending order.

Output:

hour	total_rentals
18	150
19	145

======================================================================================================================================
======================================================================================================================================

3. Revenue by Customer (Medium)
Problem:
Calculate the total revenue generated by each customer in the past year. Include customer_id, name, and total_revenue.

Constraints:

Use the following schema:

customer, payment.
Combine first_name and last_name as name.

Only include payments made in the past year.

Sort by total_revenue in descending order.

Output:

customer_id	name	total_revenue
145	John Doe	500.00
302	Alice Johnson	450.00

======================================================================================================================================
======================================================================================================================================

4. Customers Who Rented Specific Genres (Medium)
Problem:
List customers who rented at least one movie in the Comedy genre in the past 6 months. Include customer_id, name, and total_comedy_rentals.

Constraints:

Use the following schema:

customer, rental, film_category, category.
Only include rentals from the last 6 months.

Group by customer_id.

Filter customers who rented at least 1 Comedy movie.

Output:

customer_id	name	total_comedy_rentals
145	John Doe	5

======================================================================================================================================
======================================================================================================================================

5. Rentals by Day of the Week (Medium)
Problem:
Find the total rentals for each day of the week in the past year. Include day_of_week and total_rentals.

Constraints:

Use the following schema:

rental:
rental_id, rental_date.
Extract the day of the week from rental_date.

Sort results by total_rentals in descending order.

Output:

day_of_week	total_rentals
Saturday	200
Friday	180

======================================================================================================================================
======================================================================================================================================

6. Movies Rented in Sequential Months (Hard)
Problem:
Identify movies that were rented in at least 3 consecutive months in the past year. Include film_id and title.

Constraints:

Use the following schema:

rental, inventory, film.
Group by film_id and count the number of consecutive months where the movie was rented.

Only include movies rented in at least 3 consecutive months.

Output:

film_id	title
14	The Matrix
22	Inception

======================================================================================================================================
======================================================================================================================================

7. High Spending Customers (Hard)
Problem:
Find customers who spent more than $1,000 in total in the past year. Include customer_id, name, and total_spent.

Constraints:

Use the following schema:

customer, payment.
Combine first_name and last_name as name.

Only include payments made in the past year.

Sort results by total_spent in descending order.

Output:

customer_id	name	total_spent
101	Alice Johnson	1500.00

======================================================================================================================================
======================================================================================================================================

8. Frequent Customer Pairs (Hard)
Problem:
Identify the top 3 customer pairs who rented movies on the same day most frequently. Include customer_1, customer_2, and total_shared_rentals.

Constraints:

Use the following schema:

rental.
Only include customer pairs who rented movies on the same day at least once.

Sort by total_shared_rentals in descending order.

Output:

customer_1	customer_2	total_shared_rentals
John Doe	Alice Johnson	5

======================================================================================================================================
======================================================================================================================================

9. High-Performing Genres (Hard)
Problem:
List genres that generated at least $10,000 in revenue in the past year. Include genre and total_revenue.

Constraints:

Use the following schema:

payment, rental, film_category, category.
Only include genres with total revenue above $10,000.

Sort by total_revenue in descending order.

Output:

genre	total_revenue
Action	15000.00

======================================================================================================================================
======================================================================================================================================

10. Late Returns (Hard)
Problem:
Find customers who returned movies more than 7 days after the rental date. Include customer_id, name, film_id, title, and days_late.

Constraints:

Use the following schema:

rental, customer, film.
Calculate days_late as the difference between return_date and rental_date.

Only include customers with days_late > 7.

Output:

customer_id	name	film_id	title	days_late
101	Alice Johnson	22	Inception	10
